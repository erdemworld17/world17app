{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nrequire(\"../lib/swisscalc.lib.format.js\");\n\nrequire(\"../lib/swisscalc.lib.operator.js\");\n\nrequire(\"../lib/swisscalc.lib.operatorCache.js\");\n\nrequire(\"../lib/swisscalc.lib.shuntingYard.js\");\n\nrequire(\"../lib/swisscalc.display.numericDisplay.js\");\n\nrequire(\"../lib/swisscalc.display.memoryDisplay.js\");\n\nrequire(\"../lib/swisscalc.calc.calculator.js\");\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { CalcDisplay, CalcButton } from \"./../components\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CalculatorScreen = function (_React$Component) {\n  _inherits(CalculatorScreen, _React$Component);\n\n  var _super = _createSuper(CalculatorScreen);\n\n  function CalculatorScreen(props) {\n    var _this;\n\n    _classCallCheck(this, CalculatorScreen);\n\n    _this = _super.call(this, props);\n\n    _this.onDigitPress = function (digit) {\n      _this.calc.addDigit(digit);\n\n      _this.setState({\n        display: _this.calc.getMainDisplay()\n      });\n    };\n\n    _this.onUnaryOperatorPress = function (operator) {\n      _this.calc.addUnaryOperator(operator);\n\n      _this.setState({\n        display: _this.calc.getMainDisplay()\n      });\n    };\n\n    _this.onBinaryOperatorPress = function (operator) {\n      _this.calc.addBinaryOperator(operator);\n\n      _this.setState({\n        display: _this.calc.getMainDisplay()\n      });\n    };\n\n    _this.onEqualsPress = function () {\n      _this.calc.equalsPressed();\n\n      _this.setState({\n        display: _this.calc.getMainDisplay()\n      });\n    };\n\n    _this.onClearPress = function () {\n      _this.calc.clear();\n\n      _this.setState({\n        display: _this.calc.getMainDisplay()\n      });\n    };\n\n    _this.onPlusMinusPress = function () {\n      _this.calc.negate();\n\n      _this.setState({\n        display: _this.calc.getMainDisplay()\n      });\n    };\n\n    _this.onBackspacePress = function () {\n      _this.calc.backspace();\n\n      _this.setState({\n        display: _this.calc.getMainDisplay()\n      });\n    };\n\n    _this.state = {\n      display: \"0\",\n      orientation: \"lands\"\n    };\n    _this.oc = global.swisscalc.lib.operatorCache;\n    _this.calc = new global.swisscalc.calc.calculator();\n    Dimensions.addEventListener('change', function () {\n      var _Dimensions$get = Dimensions.get(\"window\"),\n          width = _Dimensions$get.width,\n          height = _Dimensions$get.height;\n\n      var orientation = width > height ? \"landscape\" : \"portrait\";\n\n      _this.setState({\n        orientation: orientation\n      });\n    });\n    _this.panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: function onStartShouldSetPanResponder(evt, gestureState) {\n        return true;\n      },\n      onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture(evt, gestureState) {\n        return true;\n      },\n      onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(evt, gestureState) {\n        return true;\n      },\n      onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture(evt, gestureState) {\n        return true;\n      },\n      onPanResponderMove: function onPanResponderMove(evt, gestureState) {},\n      onPanResponderRelease: function onPanResponderRelease(evt, gestureState) {\n        if (Math.abs(gestureState.dx) >= 50) {\n          _this.onBackspacePress();\n        }\n      }\n    });\n    return _this;\n  }\n\n  _createClass(CalculatorScreen, [{\n    key: \"renderPortrait\",\n    value: function renderPortrait() {\n      var _this2 = this;\n\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(View, _objectSpread(_objectSpread({\n          style: {\n            flex: 1,\n            justifyContent: \"flex-end\"\n          }\n        }, this.panResponder.panHandlers), {}, {\n          children: _jsx(CalcDisplay, {\n            display: this.state.display\n          })\n        })), _jsxs(View, {\n          children: [_jsxs(View, {\n            style: {\n              flexDirection: \"row\",\n              justifyContent: \"space-between\"\n            },\n            children: [_jsx(CalcButton, {\n              onPress: this.onClearPress,\n              title: \"AC\",\n              color: \"white\",\n              backgroundColor: \"#DCC894\"\n            }), _jsx(CalcButton, {\n              onPress: this.onPlusMinusPress,\n              title: \"+/-\",\n              color: \"white\",\n              backgroundColor: \"#DCC894\"\n            }), _jsx(CalcButton, {\n              onPress: function onPress() {\n                _this2.onUnaryOperatorPress(_this2.oc.PercentOperator);\n              },\n              title: \"%\",\n              color: \"white\",\n              backgroundColor: \"#DCC894\"\n            }), _jsx(CalcButton, {\n              onPress: function onPress() {\n                _this2.onBinaryOperatorPress(_this2.oc.DivisionOperator);\n              },\n              title: \"/\",\n              color: \"white\",\n              backgroundColor: \"#DCA394\"\n            })]\n          }), _jsxs(View, {\n            style: {\n              flexDirection: \"row\",\n              justifyContent: \"space-between\"\n            },\n            children: [_jsx(CalcButton, {\n              onPress: function onPress() {\n                _this2.onDigitPress(\"7\");\n              },\n              title: \"7\",\n              color: \"white\",\n              backgroundColor: \"#607D8B\"\n            }), _jsx(CalcButton, {\n              onPress: function onPress() {\n                _this2.onDigitPress(\"8\");\n              },\n              title: \"8\",\n              color: \"white\",\n              backgroundColor: \"#607D8B\"\n            }), _jsx(CalcButton, {\n              onPress: function onPress() {\n                _this2.onDigitPress(\"9\");\n              },\n              title: \"9\",\n              color: \"white\",\n              backgroundColor: \"#607D8B\"\n            }), _jsx(CalcButton, {\n              onPress: function onPress() {\n                _this2.onBinaryOperatorPress(_this2.oc.MultiplicationOperator);\n              },\n              title: \"x\",\n              color: \"white\",\n              backgroundColor: \"#DCA394\"\n            })]\n          }), _jsxs(View, {\n            style: {\n              flexDirection: \"row\",\n              justifyContent: \"space-between\"\n            },\n            children: [_jsx(CalcButton, {\n              onPress: function onPress() {\n                _this2.onDigitPress(\"4\");\n              },\n              title: \"4\",\n              color: \"white\",\n              backgroundColor: \"#607D8B\"\n            }), _jsx(CalcButton, {\n              onPress: function onPress() {\n                _this2.onDigitPress(\"5\");\n              },\n              title: \"5\",\n              color: \"white\",\n              backgroundColor: \"#607D8B\"\n            }), _jsx(CalcButton, {\n              onPress: function onPress() {\n                _this2.onDigitPress(\"6\");\n              },\n              title: \"6\",\n              color: \"white\",\n              backgroundColor: \"#607D8B\"\n            }), _jsx(CalcButton, {\n              onPress: function onPress() {\n                _this2.onBinaryOperatorPress(_this2.oc.SubtractionOperator);\n              },\n              title: \"-\",\n              color: \"white\",\n              backgroundColor: \"#DCA394\"\n            })]\n          }), _jsxs(View, {\n            style: {\n              flexDirection: \"row\",\n              justifyContent: \"space-between\"\n            },\n            children: [_jsx(CalcButton, {\n              onPress: function onPress() {\n                _this2.onDigitPress(\"1\");\n              },\n              title: \"1\",\n              color: \"white\",\n              backgroundColor: \"#607D8B\"\n            }), _jsx(CalcButton, {\n              onPress: function onPress() {\n                _this2.onDigitPress(\"2\");\n              },\n              title: \"2\",\n              color: \"white\",\n              backgroundColor: \"#607D8B\"\n            }), _jsx(CalcButton, {\n              onPress: function onPress() {\n                _this2.onDigitPress(\"3\");\n              },\n              title: \"3\",\n              color: \"white\",\n              backgroundColor: \"#607D8B\"\n            }), _jsx(CalcButton, {\n              onPress: function onPress() {\n                _this2.onBinaryOperatorPress(_this2.oc.AdditionOperator);\n              },\n              title: \"+\",\n              color: \"white\",\n              backgroundColor: \"#DCA394\"\n            })]\n          }), _jsxs(View, {\n            style: {\n              flexDirection: \"row\",\n              justifyContent: \"space-between\"\n            },\n            children: [_jsx(CalcButton, {\n              onPress: function onPress() {\n                _this2.onDigitPress(\"0\");\n              },\n              title: \"0\",\n              color: \"white\",\n              backgroundColor: \"#607D8B\",\n              style: {\n                flex: 2\n              }\n            }), _jsx(CalcButton, {\n              onPress: function onPress() {\n                _this2.onDigitPress(\".\");\n              },\n              title: \".\",\n              color: \"white\",\n              backgroundColor: \"#607D8B\"\n            }), _jsx(CalcButton, {\n              onPress: this.onEqualsPress,\n              title: \"=\",\n              color: \"white\",\n              backgroundColor: \"#DCA394\"\n            })]\n          })]\n        })]\n      });\n    }\n  }, {\n    key: \"renderLandscape\",\n    value: function renderLandscape() {\n      return _jsx(View, {\n        children: _jsx(Text, {\n          children: \"Landscape\"\n        })\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var view = this.state.orientation == \"portrait\" ? this.renderPortrait() : this.renderLandscape();\n      return _jsx(View, {\n        style: {\n          flex: 1\n        },\n        children: view\n      });\n    }\n  }]);\n\n  return CalculatorScreen;\n}(React.Component);\n\nexport { CalculatorScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingVertical: 50,\n    backgroundColor: \"#2097be\"\n  }\n});","map":{"version":3,"sources":["/Users/erdemcankaya/react_projects/app/reactnative-companyapp/src/CalculatorScreen.js"],"names":["require","React","CalcDisplay","CalcButton","CalculatorScreen","props","onDigitPress","digit","calc","addDigit","setState","display","getMainDisplay","onUnaryOperatorPress","operator","addUnaryOperator","onBinaryOperatorPress","addBinaryOperator","onEqualsPress","equalsPressed","onClearPress","clear","onPlusMinusPress","negate","onBackspacePress","backspace","state","orientation","oc","global","swisscalc","lib","operatorCache","calculator","Dimensions","addEventListener","get","width","height","panResponder","PanResponder","create","onStartShouldSetPanResponder","evt","gestureState","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderMove","onPanResponderRelease","Math","abs","dx","styles","container","flex","justifyContent","panHandlers","flexDirection","PercentOperator","DivisionOperator","MultiplicationOperator","SubtractionOperator","AdditionOperator","view","renderPortrait","renderLandscape","Component","StyleSheet","paddingVertical","backgroundColor"],"mappings":"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","sourcesContent":["\nrequire(\"../lib/swisscalc.lib.format.js\");\nrequire(\"../lib/swisscalc.lib.operator.js\");\nrequire(\"../lib/swisscalc.lib.operatorCache.js\");\nrequire(\"../lib/swisscalc.lib.shuntingYard.js\");\nrequire(\"../lib/swisscalc.display.numericDisplay.js\");\nrequire(\"../lib/swisscalc.display.memoryDisplay.js\");\nrequire(\"../lib/swisscalc.calc.calculator.js\");\n\nimport React from 'react';\nimport { StyleSheet, Dimensions, PanResponder, View, Text } from 'react-native';\nimport { CalcDisplay, CalcButton } from './../components';\n\nexport default class CalculatorScreen extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: \"0\",\n      orientation: \"lands\",    // \"portrait\" or \"landscape\"\n    }\n    \n    // Initialize calculator...\n    this.oc = global.swisscalc.lib.operatorCache;\n    this.calc = new global.swisscalc.calc.calculator();\n\n    // Listen for orientation changes...\n    Dimensions.addEventListener('change', () => {\n      const { width, height } = Dimensions.get(\"window\");\n      var orientation = (width > height) ? \"landscape\" : \"portrait\";\n      this.setState({ orientation: orientation });\n    });\n\n    // Setup gestures...\n    this.panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: (evt, gestureState) => true,\n      onStartShouldSetPanResponderCapture: (evt, gestureState) => true,\n      onMoveShouldSetPanResponder: (evt, gestureState) => true,\n      onMoveShouldSetPanResponderCapture: (evt, gestureState) => true,\n      onPanResponderMove: (evt, gestureState) => { },\n      onPanResponderRelease: (evt, gestureState) => {\n        if (Math.abs(gestureState.dx) >= 50) {\n          this.onBackspacePress();\n        }\n      },\n    })\n  }\n\n  onDigitPress = (digit) => {\n    this.calc.addDigit(digit);\n    this.setState({ display: this.calc.getMainDisplay() });\n  }\n\n  onUnaryOperatorPress = (operator) => {\n    this.calc.addUnaryOperator(operator);\n    this.setState({ display: this.calc.getMainDisplay() });\n  }\n\n  onBinaryOperatorPress = (operator) => {\n    this.calc.addBinaryOperator(operator);\n    this.setState({ display: this.calc.getMainDisplay() });\n  }\n\n  onEqualsPress = () => {\n    this.calc.equalsPressed();\n    this.setState({ display: this.calc.getMainDisplay() });\n  }\n\n  onClearPress = () => {\n    this.calc.clear();\n    this.setState({ display: this.calc.getMainDisplay() });\n  }\n\n  onPlusMinusPress = () => {\n    this.calc.negate();\n    this.setState({ display: this.calc.getMainDisplay() });\n  }\n\n  onBackspacePress = () => {\n    this.calc.backspace();\n    this.setState({ display: this.calc.getMainDisplay() });\n  }\n\n  renderPortrait() {\n    return (\n      <View style={styles.container}>\n        <View style={{flex:1, justifyContent: \"flex-end\"}} {...this.panResponder.panHandlers}>\n          <CalcDisplay display={this.state.display} />\n        </View>\n\n        <View>\n          <View style={{flexDirection: \"row\", justifyContent: \"space-between\",}}>\n            <CalcButton onPress={this.onClearPress} title=\"AC\" color=\"white\" backgroundColor=\"#DCC894\" />\n            <CalcButton onPress={this.onPlusMinusPress} title=\"+/-\" color=\"white\" backgroundColor=\"#DCC894\" />\n            <CalcButton onPress={() => { this.onUnaryOperatorPress(this.oc.PercentOperator) }} title=\"%\" color=\"white\" backgroundColor=\"#DCC894\" />\n            <CalcButton onPress={() => { this.onBinaryOperatorPress(this.oc.DivisionOperator) }} title=\"/\" color=\"white\" backgroundColor=\"#DCA394\" />\n          </View>\n\n          <View style={{flexDirection: \"row\", justifyContent: \"space-between\",}}>\n            <CalcButton onPress={() => { this.onDigitPress(\"7\") }} title=\"7\" color=\"white\" backgroundColor=\"#607D8B\" />\n            <CalcButton onPress={() => { this.onDigitPress(\"8\") }} title=\"8\" color=\"white\" backgroundColor=\"#607D8B\" />\n            <CalcButton onPress={() => { this.onDigitPress(\"9\") }} title=\"9\" color=\"white\" backgroundColor=\"#607D8B\" />\n            <CalcButton onPress={() => { this.onBinaryOperatorPress(this.oc.MultiplicationOperator) }} title=\"x\" color=\"white\" backgroundColor=\"#DCA394\" />\n          </View>\n\n          <View style={{flexDirection: \"row\", justifyContent: \"space-between\",}}>\n            <CalcButton onPress={() => { this.onDigitPress(\"4\") }} title=\"4\" color=\"white\" backgroundColor=\"#607D8B\" />\n            <CalcButton onPress={() => { this.onDigitPress(\"5\") }} title=\"5\" color=\"white\" backgroundColor=\"#607D8B\" />\n            <CalcButton onPress={() => { this.onDigitPress(\"6\") }} title=\"6\" color=\"white\" backgroundColor=\"#607D8B\" />\n            <CalcButton onPress={() => { this.onBinaryOperatorPress(this.oc.SubtractionOperator) }} title=\"-\" color=\"white\" backgroundColor=\"#DCA394\" />\n          </View>\n\n          <View style={{flexDirection: \"row\", justifyContent: \"space-between\",}}>\n            <CalcButton onPress={() => { this.onDigitPress(\"1\") }} title=\"1\" color=\"white\" backgroundColor=\"#607D8B\" />\n            <CalcButton onPress={() => { this.onDigitPress(\"2\") }} title=\"2\" color=\"white\" backgroundColor=\"#607D8B\" />\n            <CalcButton onPress={() => { this.onDigitPress(\"3\") }} title=\"3\" color=\"white\" backgroundColor=\"#607D8B\" />\n            <CalcButton onPress={() => { this.onBinaryOperatorPress(this.oc.AdditionOperator) }} title=\"+\" color=\"white\" backgroundColor=\"#DCA394\" />\n          </View>\n\n          <View style={{flexDirection: \"row\", justifyContent: \"space-between\",}}>\n            <CalcButton onPress={() => { this.onDigitPress(\"0\") }} title=\"0\" color=\"white\" backgroundColor=\"#607D8B\" style={{flex:2}} />\n            <CalcButton onPress={() => { this.onDigitPress(\".\") }} title=\".\" color=\"white\" backgroundColor=\"#607D8B\" />\n            <CalcButton onPress={this.onEqualsPress} title=\"=\" color=\"white\" backgroundColor=\"#DCA394\" />\n          </View>\n        </View>\n\n      </View>\n    );\n  }\n\n  renderLandscape() {\n    return (\n      <View>\n        <Text>Landscape</Text>\n      </View>\n    )\n  }\n\n  render() {\n    var view = (this.state.orientation == \"portrait\")\n      ? this.renderPortrait()\n      : this.renderLandscape();\n\n    return (\n      <View style={{flex:1}}>\n        {view}\n      </View>\n    )\n  }\n\n}\n\nconst styles = StyleSheet.create({\n  container: { flex: 1, paddingVertical: 50, backgroundColor: \"#2097be\" },\n})"]},"metadata":{},"sourceType":"module"}