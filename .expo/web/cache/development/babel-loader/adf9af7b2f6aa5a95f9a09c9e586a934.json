{"ast":null,"code":"global.swisscalc = global.swisscalc || {};\nglobal.swisscalc.calc = global.swisscalc.calc || {};\n\nglobal.swisscalc.calc.calculator = function () {\n  this._state = 0;\n  this._evaluator = new global.swisscalc.lib.shuntingYard();\n  this._mainDisplay = new global.swisscalc.display.numericDisplay(true, 7);\n  this._memoryDisplay = new global.swisscalc.display.memoryDisplay();\n};\n\nglobal.swisscalc.calc.calculator.STATE_AWAITING_OPERAND = 0;\nglobal.swisscalc.calc.calculator.STATE_AWAITING_OPERATOR = 0;\nglobal.swisscalc.calc.calculator.STATE_ENTERING_OPERAND = 1;\nglobal.swisscalc.calc.calculator.STATE_ENTERING_OPERATOR = 2;\n\nglobal.swisscalc.calc.calculator.prototype.setState = function (state) {\n  this._state = state;\n};\n\nglobal.swisscalc.calc.calculator.prototype.pushDisplay = function () {\n  var val = this._mainDisplay.getDisplayValue();\n\n  this._evaluator.addOperand(val);\n};\n\nglobal.swisscalc.calc.calculator.prototype.addDigit = function (digit) {\n  if (this._state == global.swisscalc.calc.calculator.STATE_AWAITING_OPERATOR) {\n    this._mainDisplay.clear();\n\n    this._mainDisplay.addDigit(digit);\n\n    this.setState(global.swisscalc.calc.calculator.STATE_ENTERING_OPERAND);\n  } else if (this._state == global.swisscalc.calc.calculator.STATE_ENTERING_OPERAND) {\n    this._mainDisplay.addDigit(digit);\n\n    this.setState(global.swisscalc.calc.calculator.STATE_ENTERING_OPERAND);\n  } else if (this._state == global.swisscalc.calc.calculator.STATE_ENTERING_OPERATOR) {\n    this._mainDisplay.clear();\n\n    this._mainDisplay.addDigit(digit);\n\n    this.setState(global.swisscalc.calc.calculator.STATE_ENTERING_OPERAND);\n  }\n};\n\nglobal.swisscalc.calc.calculator.prototype.backspace = function () {\n  if (this._state == global.swisscalc.calc.calculator.STATE_AWAITING_OPERATOR) {\n    this.setState(global.swisscalc.calc.calculator.STATE_AWAITING_OPERATOR);\n  } else if (this._state == global.swisscalc.calc.calculator.STATE_ENTERING_OPERAND) {\n    this._mainDisplay.backspace();\n\n    this.setState(global.swisscalc.calc.calculator.STATE_ENTERING_OPERAND);\n  } else if (this._state == global.swisscalc.calc.calculator.STATE_ENTERING_OPERATOR) {\n    this.setState(global.swisscalc.calc.calculator.STATE_ENTERING_OPERATOR);\n  }\n};\n\nglobal.swisscalc.calc.calculator.prototype.clear = function () {\n  this._mainDisplay.clear();\n\n  this._evaluator.clear();\n\n  this.setState(global.swisscalc.calc.calculator.STATE_AWAITING_OPERATOR);\n};\n\nglobal.swisscalc.calc.calculator.prototype.clearEntry = function () {\n  this._mainDisplay.clear();\n};\n\nglobal.swisscalc.calc.calculator.prototype.equalsPressed = function () {\n  this.pushDisplay();\n\n  var result = this._evaluator.evaluate();\n\n  this._mainDisplay.setDisplayValue(result);\n\n  this.setState(global.swisscalc.calc.calculator.STATE_AWAITING_OPERATOR);\n};\n\nglobal.swisscalc.calc.calculator.prototype.openParen = function () {\n  this._evaluator.addOpenParen(global.swisscalc.lib.operatorCache.OpenParenOperator);\n\n  this._mainDisplay.clear();\n\n  this.setState(global.swisscalc.calc.calculator.STATE_AWAITING_OPERATOR);\n};\n\nglobal.swisscalc.calc.calculator.prototype.closeParen = function () {\n  if (!this._evaluator.inSubExpression()) return;\n  this.pushDisplay();\n\n  this._evaluator.addCloseParen(global.swisscalc.lib.operatorCache.CloseParenOperator);\n\n  this._mainDisplay.setDisplayValue(this._evaluator.popOperand());\n\n  this.setState(global.swisscalc.calc.calculator.STATE_AWAITING_OPERATOR);\n};\n\nglobal.swisscalc.calc.calculator.prototype.addNullaryOperator = function (nullaryOperator) {\n  var val = nullaryOperator.evaluate();\n\n  this._mainDisplay.setDisplayValue(val);\n\n  this.setState(global.swisscalc.calc.calculator.STATE_AWAITING_OPERATOR);\n};\n\nglobal.swisscalc.calc.calculator.prototype.negate = function () {\n  if (this._state == global.swisscalc.calc.calculator.STATE_AWAITING_OPERATOR) {\n    this.addUnaryOperator(global.swisscalc.lib.operatorCache.NegateOperator);\n  } else if (this._state == global.swisscalc.calc.calculator.STATE_ENTERING_OPERAND) {\n    this._mainDisplay.negate();\n\n    this.setState(global.swisscalc.calc.calculator.STATE_ENTERING_OPERAND);\n  } else if (this._state == global.swisscalc.calc.calculator.STATE_ENTERING_OPERATOR) {\n    this.addUnaryOperator(global.swisscalc.lib.operatorCache.NegateOperator);\n  }\n};\n\nglobal.swisscalc.calc.calculator.prototype.addUnaryOperator = function (unaryOperator) {\n  this.pushDisplay();\n\n  this._evaluator.addUnaryOperator(unaryOperator);\n\n  this._mainDisplay.setDisplayValue(this._evaluator.popOperand());\n\n  this.setState(global.swisscalc.calc.calculator.STATE_AWAITING_OPERATOR);\n};\n\nglobal.swisscalc.calc.calculator.prototype.addBinaryOperator = function (binaryOperator) {\n  if (this._state == global.swisscalc.calc.calculator.STATE_AWAITING_OPERATOR) {\n    this.pushDisplay();\n\n    this._evaluator.addBinaryOperator(binaryOperator);\n\n    this._mainDisplay.setDisplayValue(this._evaluator.peekOperand());\n\n    this.setState(global.swisscalc.calc.calculator.STATE_ENTERING_OPERATOR);\n  } else if (this._state == global.swisscalc.calc.calculator.STATE_ENTERING_OPERAND) {\n    this.pushDisplay();\n\n    this._evaluator.addBinaryOperator(binaryOperator);\n\n    this._mainDisplay.setDisplayValue(this._evaluator.peekOperand());\n\n    this.setState(global.swisscalc.calc.calculator.STATE_ENTERING_OPERATOR);\n  } else if (this._state == global.swisscalc.calc.calculator.STATE_ENTERING_OPERATOR) {\n    this._evaluator.popOperator();\n\n    this._evaluator.addBinaryOperator(binaryOperator);\n\n    this._mainDisplay.setDisplayValue(this._evaluator.peekOperand());\n\n    this.setState(global.swisscalc.calc.calculator.STATE_ENTERING_OPERATOR);\n  }\n};\n\nglobal.swisscalc.calc.calculator.prototype.getMainDisplay = function () {\n  return this._mainDisplay.getCurrentDisplay();\n};\n\nglobal.swisscalc.calc.calculator.prototype.memoryClear = function () {\n  this._memoryDisplay.memoryClear();\n};\n\nglobal.swisscalc.calc.calculator.prototype.memoryPlus = function () {\n  var val = this._mainDisplay.getDisplayValue();\n\n  this._memoryDisplay.memoryPlus(val);\n};\n\nglobal.swisscalc.calc.calculator.prototype.memoryMinus = function () {\n  var val = this._mainDisplay.getDisplayValue();\n\n  this._memoryDisplay.memoryMinus(val);\n};\n\nglobal.swisscalc.calc.calculator.prototype.memorySet = function () {\n  var val = this._mainDisplay.getDisplayValue();\n\n  this._memoryDisplay.memorySet(val);\n};\n\nglobal.swisscalc.calc.calculator.prototype.memoryRecall = function () {\n  if (!this._memoryDisplay.hasMemory()) return;\n\n  var val = this._memoryDisplay.memoryRecall();\n\n  this._mainDisplay.setDisplayValue(val);\n\n  this.setState(global.swisscalc.calc.calculator.STATE_AWAITING_OPERATOR);\n};","map":{"version":3,"sources":["/Users/erdemcankaya/react_projects/app/reactnative-companyapp/lib/swisscalc.calc.calculator.js"],"names":["global","swisscalc","calc","calculator","_state","_evaluator","lib","shuntingYard","_mainDisplay","display","numericDisplay","_memoryDisplay","memoryDisplay","STATE_AWAITING_OPERAND","STATE_AWAITING_OPERATOR","STATE_ENTERING_OPERAND","STATE_ENTERING_OPERATOR","prototype","setState","state","pushDisplay","val","getDisplayValue","addOperand","addDigit","digit","clear","backspace","clearEntry","equalsPressed","result","evaluate","setDisplayValue","openParen","addOpenParen","operatorCache","OpenParenOperator","closeParen","inSubExpression","addCloseParen","CloseParenOperator","popOperand","addNullaryOperator","nullaryOperator","negate","addUnaryOperator","NegateOperator","unaryOperator","addBinaryOperator","binaryOperator","peekOperand","popOperator","getMainDisplay","getCurrentDisplay","memoryClear","memoryPlus","memoryMinus","memorySet","memoryRecall","hasMemory"],"mappings":"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","sourcesContent":["//\n// Eric Morgan\n// Copyright (c) 2014. \n//\n\n// Class for implementing a basic/scientific calculator\n\n/* \n\tUsage:\n\t\n\tvar oc = global.swisscalc.lib.operatorCache;\n\tvar calc = new global.swisscalc.calc.calculator();\n\t\n\t// Calculate: 12 + 45 = \t\n\tcalc.addDigit(\"1\");\n\tcalc.addDigit(\"2\");\n\tcalc.addBinaryOperator(oc.AdditionOperator);\n\tcalc.addDigit(\"4\");\n\tcalc.addDigit(\"5\");\n\tcalc.equalsPressed();\n\talert(calc.getMainDisplay());\t// 57\n\tcalc.clear();\n\n*/\n\nglobal.swisscalc = global.swisscalc || {};\nglobal.swisscalc.calc = global.swisscalc.calc || {};\nglobal.swisscalc.calc.calculator = function() {\n\tthis._state = 0;\t// STATE_AWAITING_OPERATOR\n\tthis._evaluator = new global.swisscalc.lib.shuntingYard();\n\tthis._mainDisplay = new global.swisscalc.display.numericDisplay(true, 7);\n\tthis._memoryDisplay = new global.swisscalc.display.memoryDisplay();\n};\n\n// Constants...\nglobal.swisscalc.calc.calculator.STATE_AWAITING_OPERAND \t= 0;\t// Don't use. Use STATE_AWAITING_OPERATOR instead\nglobal.swisscalc.calc.calculator.STATE_AWAITING_OPERATOR \t= 0;\nglobal.swisscalc.calc.calculator.STATE_ENTERING_OPERAND\t= 1;\nglobal.swisscalc.calc.calculator.STATE_ENTERING_OPERATOR \t= 2;\n\n// Sets the current state of the calculator.\nglobal.swisscalc.calc.calculator.prototype.setState = function(state) {\n\tthis._state = state;\n};\n\n// Pushes the value of _mainDisplay onto the operand stack.\nglobal.swisscalc.calc.calculator.prototype.pushDisplay = function() {\n\tvar val = this._mainDisplay.getDisplayValue();\n\tthis._evaluator.addOperand(val);\n};\n\n// Adds the given digit, or starts the display over if applicable.\n// Only send 0...9 or . (decimal). Must be a string. State dependent.\nglobal.swisscalc.calc.calculator.prototype.addDigit = function(digit) {\n\tif (this._state == global.swisscalc.calc.calculator.STATE_AWAITING_OPERATOR) \n\t{\n\t\tthis._mainDisplay.clear();\n\t\tthis._mainDisplay.addDigit(digit);\n\t\tthis.setState(global.swisscalc.calc.calculator.STATE_ENTERING_OPERAND);\n\t} \n\telse if (this._state == global.swisscalc.calc.calculator.STATE_ENTERING_OPERAND) \n\t{\n\t\tthis._mainDisplay.addDigit(digit);\n\t\tthis.setState(global.swisscalc.calc.calculator.STATE_ENTERING_OPERAND);\n\t} \n\telse if (this._state == global.swisscalc.calc.calculator.STATE_ENTERING_OPERATOR) \n\t{\n\t\tthis._mainDisplay.clear();\n\t\tthis._mainDisplay.addDigit(digit);\n\t\tthis.setState(global.swisscalc.calc.calculator.STATE_ENTERING_OPERAND);\n\t}\n};\n\n// Removes the last character if applicable. State dependent.\nglobal.swisscalc.calc.calculator.prototype.backspace = function() {\n\tif (this._state == global.swisscalc.calc.calculator.STATE_AWAITING_OPERATOR) \n\t{\n\t\tthis.setState(global.swisscalc.calc.calculator.STATE_AWAITING_OPERATOR);\n\t} \n\telse if (this._state == global.swisscalc.calc.calculator.STATE_ENTERING_OPERAND) \n\t{\n\t\tthis._mainDisplay.backspace();\n\t\tthis.setState(global.swisscalc.calc.calculator.STATE_ENTERING_OPERAND);\n\t} \n\telse if (this._state == global.swisscalc.calc.calculator.STATE_ENTERING_OPERATOR) \n\t{\n\t\tthis.setState(global.swisscalc.calc.calculator.STATE_ENTERING_OPERATOR);\n\t}\n};\n\n// Clears everything and returns to initial state\nglobal.swisscalc.calc.calculator.prototype.clear = function() {\n\tthis._mainDisplay.clear();\n\tthis._evaluator.clear();\n\tthis.setState(global.swisscalc.calc.calculator.STATE_AWAITING_OPERATOR);\n};\n\n// Clears the display. Does not change state. (Like pressing CE on a calculator)\nglobal.swisscalc.calc.calculator.prototype.clearEntry = function() {\n\tthis._mainDisplay.clear();\n};\n\n// Pushes display, evaluates, and updates display.\nglobal.swisscalc.calc.calculator.prototype.equalsPressed = function() {\n\tthis.pushDisplay();\n\tvar result = this._evaluator.evaluate();\n\tthis._mainDisplay.setDisplayValue(result);\n\tthis.setState(global.swisscalc.calc.calculator.STATE_AWAITING_OPERATOR);\n};\n\n// Adds parenthesis and clears display.\nglobal.swisscalc.calc.calculator.prototype.openParen = function() {\n\tthis._evaluator.addOpenParen(global.swisscalc.lib.operatorCache.OpenParenOperator);\n\tthis._mainDisplay.clear();\n\tthis.setState(global.swisscalc.calc.calculator.STATE_AWAITING_OPERATOR);\n};\n\n// If in a sub-expression, pushes display, applies parenthesis, and updates display.\nglobal.swisscalc.calc.calculator.prototype.closeParen = function() {\n\t// Ignore if not in sub-expression...\n\tif (!this._evaluator.inSubExpression())\n\t\treturn;\n\t\t\n\tthis.pushDisplay();\n\tthis._evaluator.addCloseParen(global.swisscalc.lib.operatorCache.CloseParenOperator);\n\tthis._mainDisplay.setDisplayValue(this._evaluator.popOperand());\n\tthis.setState(global.swisscalc.calc.calculator.STATE_AWAITING_OPERATOR);\n};\n\n// Just displays the constant on the screen.\nglobal.swisscalc.calc.calculator.prototype.addNullaryOperator = function(nullaryOperator) {\n\tvar val = nullaryOperator.evaluate();\n\tthis._mainDisplay.setDisplayValue(val);\n\tthis.setState(global.swisscalc.calc.calculator.STATE_AWAITING_OPERATOR);\n};\n\n// Negation is a special type of unary operator because the user must be allowed to continue typing the number.\nglobal.swisscalc.calc.calculator.prototype.negate = function() {\n\tif (this._state == global.swisscalc.calc.calculator.STATE_AWAITING_OPERATOR) \n\t{\n\t\tthis.addUnaryOperator(global.swisscalc.lib.operatorCache.NegateOperator);\n\t} \n\telse if (this._state == global.swisscalc.calc.calculator.STATE_ENTERING_OPERAND) \n\t{\n\t\tthis._mainDisplay.negate();\n\t\tthis.setState(global.swisscalc.calc.calculator.STATE_ENTERING_OPERAND);\n\t} \n\telse if (this._state == global.swisscalc.calc.calculator.STATE_ENTERING_OPERATOR) \n\t{\n\t\tthis.addUnaryOperator(global.swisscalc.lib.operatorCache.NegateOperator);\n\t}\n};\n\n// Adds the given unary operator. Do NOT send this function a NegateOperator; use negate() instead.\nglobal.swisscalc.calc.calculator.prototype.addUnaryOperator = function(unaryOperator) {\n\tthis.pushDisplay();\n\tthis._evaluator.addUnaryOperator(unaryOperator);\n\tthis._mainDisplay.setDisplayValue(this._evaluator.popOperand());\n\tthis.setState(global.swisscalc.calc.calculator.STATE_AWAITING_OPERATOR);\n};\n\n// Adds the given binary operator.\nglobal.swisscalc.calc.calculator.prototype.addBinaryOperator = function(binaryOperator) {\n\tif (this._state == global.swisscalc.calc.calculator.STATE_AWAITING_OPERATOR) \n\t{\n\t\tthis.pushDisplay();\n\t\tthis._evaluator.addBinaryOperator(binaryOperator);\n\t\tthis._mainDisplay.setDisplayValue(this._evaluator.peekOperand());\n\t\tthis.setState(global.swisscalc.calc.calculator.STATE_ENTERING_OPERATOR);\n\t} \n\telse if (this._state == global.swisscalc.calc.calculator.STATE_ENTERING_OPERAND) \n\t{\n\t\tthis.pushDisplay();\n\t\tthis._evaluator.addBinaryOperator(binaryOperator);\n\t\tthis._mainDisplay.setDisplayValue(this._evaluator.peekOperand());\n\t\tthis.setState(global.swisscalc.calc.calculator.STATE_ENTERING_OPERATOR);\n\t} \n\telse if (this._state == global.swisscalc.calc.calculator.STATE_ENTERING_OPERATOR) \n\t{\n\t\t// If entering an operator, we must have already had one, so we can pop..\n\t\tthis._evaluator.popOperator();\n\t\tthis._evaluator.addBinaryOperator(binaryOperator);\n\t\tthis._mainDisplay.setDisplayValue(this._evaluator.peekOperand());\n\t\tthis.setState(global.swisscalc.calc.calculator.STATE_ENTERING_OPERATOR);\n\t}\n};\n\n// Returns the current display on the _mainDisplay.\nglobal.swisscalc.calc.calculator.prototype.getMainDisplay = function() {\n\treturn this._mainDisplay.getCurrentDisplay();\n};\n\n//\n// *** MEMORY FUNCTIONS ***\n//\n\n// Clears the memory.\nglobal.swisscalc.calc.calculator.prototype.memoryClear = function() {\n\tthis._memoryDisplay.memoryClear();\n};\n\n// Adds current display to memory.\nglobal.swisscalc.calc.calculator.prototype.memoryPlus = function() {\n\tvar val = this._mainDisplay.getDisplayValue();\n\tthis._memoryDisplay.memoryPlus(val);\n};\n\n// Subtracts current display from memory.\nglobal.swisscalc.calc.calculator.prototype.memoryMinus = function() {\n\tvar val = this._mainDisplay.getDisplayValue();\n\tthis._memoryDisplay.memoryMinus(val);\n};\n\n// Sets memory to the display.\nglobal.swisscalc.calc.calculator.prototype.memorySet = function() {\n\tvar val = this._mainDisplay.getDisplayValue();\n\tthis._memoryDisplay.memorySet(val);\n};\n\n// Displays memory on the display and waits for operator.\nglobal.swisscalc.calc.calculator.prototype.memoryRecall = function() {\n\t// Ignore if memory not set...\n\tif (!this._memoryDisplay.hasMemory())\n\t\treturn;\n\t\t\n\tvar val = this._memoryDisplay.memoryRecall();\n\tthis._mainDisplay.setDisplayValue(val);\n\tthis.setState(global.swisscalc.calc.calculator.STATE_AWAITING_OPERATOR);\n};"]},"metadata":{},"sourceType":"script"}