{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar CalcButton = function (_React$Component) {\n  _inherits(CalcButton, _React$Component);\n\n  var _super = _createSuper(CalcButton);\n\n  function CalcButton() {\n    _classCallCheck(this, CalcButton);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CalcButton, [{\n    key: \"render\",\n    value: function render() {\n      var r = this.props.radius;\n      var w = this.props.radius * 2;\n      var h = this.props.radius * 2;\n      var bc = this.props.backgroundColor;\n      return _jsx(TouchableOpacity, {\n        onPress: this.props.onPress,\n        style: [styles.container, {\n          width: w,\n          height: h,\n          borderRadius: r,\n          backgroundColor: bc\n        }, _objectSpread({}, this.props.style)],\n        children: _jsx(Text, {\n          style: [styles.text, {\n            color: this.props.color\n          }],\n          children: this.props.title\n        })\n      });\n    }\n  }]);\n\n  return CalcButton;\n}(React.Component);\n\nCalcButton.defaultProps = {\n  onPress: function onPress() {},\n  title: \"\",\n  color: \"white\",\n  backgroundColor: \"black\",\n  radius: 40,\n  style: {}\n};\nexport { CalcButton as default };\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    margin: 5\n  },\n  text: {\n    fontSize: 30,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["/Users/erdemcankaya/react_projects/app/reactnative-companyapp/components/CalcButton.js"],"names":["React","CalcButton","r","props","radius","w","h","bc","backgroundColor","onPress","styles","container","width","height","borderRadius","style","text","color","title","Component","defaultProps","StyleSheet","create","alignItems","justifyContent","margin","fontSize","fontWeight"],"mappings":";;;;;;;;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;IAGqBC,U;;;;;;;;;;;;;WAanB,kBAAS;AACP,UAAIC,CAAC,GAAG,KAAKC,KAAL,CAAWC,MAAnB;AACA,UAAIC,CAAC,GAAG,KAAKF,KAAL,CAAWC,MAAX,GAAoB,CAA5B;AACA,UAAIE,CAAC,GAAG,KAAKH,KAAL,CAAWC,MAAX,GAAoB,CAA5B;AACA,UAAIG,EAAE,GAAG,KAAKJ,KAAL,CAAWK,eAApB;AAEA,aACE,KAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE,KAAKL,KAAL,CAAWM,OAAtC;AACE,QAAA,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmB;AAAEC,UAAAA,KAAK,EAAEP,CAAT;AAAYQ,UAAAA,MAAM,EAAEP,CAApB;AAAuBQ,UAAAA,YAAY,EAAEZ,CAArC;AAAwCM,UAAAA,eAAe,EAAED;AAAzD,SAAnB,oBAAuF,KAAKJ,KAAL,CAAWY,KAAlG,EADT;AAAA,kBAEE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE,CAACL,MAAM,CAACM,IAAR,EAAc;AAAEC,YAAAA,KAAK,EAAE,KAAKd,KAAL,CAAWc;AAApB,WAAd,CAAb;AAAA,oBAA0D,KAAKd,KAAL,CAAWe;AAArE;AAFF,QADF;AAMD;;;;EAzBqClB,KAAK,CAACmB,S;;AAAzBlB,U,CAEZmB,Y,GAAe;AACpBX,EAAAA,OAAO,EAAE,mBAAW,CAAG,CADH;AAEpBS,EAAAA,KAAK,EAAE,EAFa;AAGpBD,EAAAA,KAAK,EAAE,OAHa;AAIpBT,EAAAA,eAAe,EAAE,OAJG;AAKpBJ,EAAAA,MAAM,EAAE,EALY;AAOpBW,EAAAA,KAAK,EAAE;AAPa,C;SAFHd,U;AA4BrB,IAAMS,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC/BX,EAAAA,SAAS,EAAE;AAAEY,IAAAA,UAAU,EAAE,QAAd;AAAwBC,IAAAA,cAAc,EAAE,QAAxC;AAAkDC,IAAAA,MAAM,EAAE;AAA1D,GADoB;AAE/BT,EAAAA,IAAI,EAAE;AAAEU,IAAAA,QAAQ,EAAE,EAAZ;AAAgBC,IAAAA,UAAU,EAAE;AAA5B;AAFyB,CAAlB,CAAf","sourcesContent":["\nimport React from 'react';\nimport { StyleSheet, View, Text, TouchableOpacity } from 'react-native';\n\nexport default class CalcButton extends React.Component {\n\n  static defaultProps = {\n    onPress: function() { },\n    title: \"\",\n    color: \"white\",\n    backgroundColor: \"black\",\n    radius: 40,\n\n    style: { },\n  }\n\n\n  render() {\n    var r = this.props.radius;\n    var w = this.props.radius * 2;\n    var h = this.props.radius * 2;\n    var bc = this.props.backgroundColor;\n\n    return (\n      <TouchableOpacity onPress={this.props.onPress} \n        style={[styles.container, { width: w, height: h, borderRadius: r, backgroundColor: bc }, { ...this.props.style }]}>\n        <Text style={[styles.text, { color: this.props.color }]}>{this.props.title}</Text>\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: { alignItems: \"center\", justifyContent: \"center\", margin: 5, },\n  text: { fontSize: 30, fontWeight: \"bold\", },\n});"]},"metadata":{},"sourceType":"module"}