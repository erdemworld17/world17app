{"ast":null,"code":"global.swisscalc = global.swisscalc || {};\nglobal.swisscalc.display = global.swisscalc.display || {};\n\nglobal.swisscalc.display.memoryDisplay = function () {\n  this._display = \"\";\n  this._memValue = 0;\n  this._hasMemory = false;\n};\n\nglobal.swisscalc.display.memoryDisplay.prototype.hasMemory = function () {\n  return this._hasMemory;\n};\n\nglobal.swisscalc.display.memoryDisplay.prototype.getCurrentDisplay = function () {\n  return this._display;\n};\n\nglobal.swisscalc.display.memoryDisplay.prototype.memoryRecall = function () {\n  return this._memValue;\n};\n\nglobal.swisscalc.display.memoryDisplay.prototype.memorySet = function (val) {\n  this._hasMemory = true;\n  this._memValue = val;\n  this._display = \"M\";\n};\n\nglobal.swisscalc.display.memoryDisplay.prototype.memoryPlus = function (val) {\n  this._hasMemory = true;\n  this._memValue += val;\n  this._display = \"M\";\n};\n\nglobal.swisscalc.display.memoryDisplay.prototype.memoryMinus = function (val) {\n  this._hasMemory = true;\n  this._memValue -= val;\n  this._display = \"M\";\n};\n\nglobal.swisscalc.display.memoryDisplay.prototype.memoryClear = function () {\n  this._hasMemory = false;\n  this._memValue = 0;\n  this._display = \"\";\n};","map":{"version":3,"sources":["/Users/erdemcankaya/react_projects/app/reactnative-companyapp/lib/swisscalc.display.memoryDisplay.js"],"names":["global","swisscalc","display","memoryDisplay","_display","_memValue","_hasMemory","prototype","hasMemory","getCurrentDisplay","memoryRecall","memorySet","val","memoryPlus","memoryMinus","memoryClear"],"mappings":"AAOAA,MAAM,CAACC,SAAP,GAAmBD,MAAM,CAACC,SAAP,IAAoB,EAAvC;AACAD,MAAM,CAACC,SAAP,CAAiBC,OAAjB,GAA2BF,MAAM,CAACC,SAAP,CAAiBC,OAAjB,IAA4B,EAAvD;;AACAF,MAAM,CAACC,SAAP,CAAiBC,OAAjB,CAAyBC,aAAzB,GAAyC,YAAW;AACnD,OAAKC,QAAL,GAAgB,EAAhB;AACA,OAAKC,SAAL,GAAiB,CAAjB;AACA,OAAKC,UAAL,GAAkB,KAAlB;AACA,CAJD;;AAOAN,MAAM,CAACC,SAAP,CAAiBC,OAAjB,CAAyBC,aAAzB,CAAuCI,SAAvC,CAAiDC,SAAjD,GAA6D,YAAW;AACvE,SAAO,KAAKF,UAAZ;AACA,CAFD;;AAKAN,MAAM,CAACC,SAAP,CAAiBC,OAAjB,CAAyBC,aAAzB,CAAuCI,SAAvC,CAAiDE,iBAAjD,GAAqE,YAAW;AAC/E,SAAO,KAAKL,QAAZ;AACA,CAFD;;AAKAJ,MAAM,CAACC,SAAP,CAAiBC,OAAjB,CAAyBC,aAAzB,CAAuCI,SAAvC,CAAiDG,YAAjD,GAAgE,YAAW;AAC1E,SAAO,KAAKL,SAAZ;AACA,CAFD;;AAKAL,MAAM,CAACC,SAAP,CAAiBC,OAAjB,CAAyBC,aAAzB,CAAuCI,SAAvC,CAAiDI,SAAjD,GAA6D,UAASC,GAAT,EAAc;AAC1E,OAAKN,UAAL,GAAkB,IAAlB;AACA,OAAKD,SAAL,GAAiBO,GAAjB;AACA,OAAKR,QAAL,GAAgB,GAAhB;AACA,CAJD;;AAOAJ,MAAM,CAACC,SAAP,CAAiBC,OAAjB,CAAyBC,aAAzB,CAAuCI,SAAvC,CAAiDM,UAAjD,GAA8D,UAASD,GAAT,EAAc;AAC3E,OAAKN,UAAL,GAAkB,IAAlB;AACA,OAAKD,SAAL,IAAkBO,GAAlB;AACA,OAAKR,QAAL,GAAgB,GAAhB;AACA,CAJD;;AAOAJ,MAAM,CAACC,SAAP,CAAiBC,OAAjB,CAAyBC,aAAzB,CAAuCI,SAAvC,CAAiDO,WAAjD,GAA+D,UAASF,GAAT,EAAc;AAC5E,OAAKN,UAAL,GAAkB,IAAlB;AACA,OAAKD,SAAL,IAAkBO,GAAlB;AACA,OAAKR,QAAL,GAAgB,GAAhB;AACA,CAJD;;AAOAJ,MAAM,CAACC,SAAP,CAAiBC,OAAjB,CAAyBC,aAAzB,CAAuCI,SAAvC,CAAiDQ,WAAjD,GAA+D,YAAW;AACzE,OAAKT,UAAL,GAAkB,KAAlB;AACA,OAAKD,SAAL,GAAiB,CAAjB;AACA,OAAKD,QAAL,GAAgB,EAAhB;AACA,CAJD","sourcesContent":["//\n// Eric Morgan\n// Copyright (c) 2014. \n//\n\n// Class for displaying/storing the memory on a calculator.\n\nglobal.swisscalc = global.swisscalc || {};\nglobal.swisscalc.display = global.swisscalc.display || {};\nglobal.swisscalc.display.memoryDisplay = function() { \n\tthis._display = \"\";\n\tthis._memValue = 0;\n\tthis._hasMemory = false;\n};\n\n// Returns true if memory is set.\nglobal.swisscalc.display.memoryDisplay.prototype.hasMemory = function() {\n\treturn this._hasMemory;\n};\n\n// Returns current display\nglobal.swisscalc.display.memoryDisplay.prototype.getCurrentDisplay = function() {\n\treturn this._display;\n};\n\n// Returns memory value.\nglobal.swisscalc.display.memoryDisplay.prototype.memoryRecall = function() {\n\treturn this._memValue;\n};\n\n// Sets the memory to the given value.\nglobal.swisscalc.display.memoryDisplay.prototype.memorySet = function(val) {\n\tthis._hasMemory = true;\n\tthis._memValue = val;\n\tthis._display = \"M\";\n};\n\n// Adds given number to the memory.\nglobal.swisscalc.display.memoryDisplay.prototype.memoryPlus = function(val) {\n\tthis._hasMemory = true;\n\tthis._memValue += val;\n\tthis._display = \"M\";\n};\n\n// Subtracts the given value from memory.\nglobal.swisscalc.display.memoryDisplay.prototype.memoryMinus = function(val) {\n\tthis._hasMemory = true;\n\tthis._memValue -= val;\n\tthis._display = \"M\";\n};\n\n// Clears the memory.\nglobal.swisscalc.display.memoryDisplay.prototype.memoryClear = function() {\n\tthis._hasMemory = false;\n\tthis._memValue = 0;\n\tthis._display = \"\";\n};\n"]},"metadata":{},"sourceType":"script"}